#!/usr/bin/env python

# standard library
import pytest
import sys
import os

# WAF system
from waflib.Task import Task

top = '.'
out = '.bld'

# Check for Python 3
if not (sys.version_info[0] == 3):
    raise AssertionError('Please use Python 3')

# Reconstruct directory structure and edits to PYTHONPATH
#BASE_DIR = os.path.dirname(os.path.realpath(__file__))
#ROBUPY_DIR = BASE_DIR.replace('robupy', '')
# TODO: THis has to go
sys.path.insert(0, os.environ["ROBUPY"])

from tests.codes.auxiliary import cleanup_robupy_package


def options(opt):

    opt.load('compiler_c')

    opt.load('compiler_fc')

    opt.add_option('--test', action='store_true', dest='is_test',
                   default=False, help='run test battery')

    opt.add_option('--debug', action='store_true', dest='is_debug',
                   default=False, help='use debug compiler options')


def configure(conf):

    # Construct environment variables
    conf.env.project_paths = dict()

    conf.env.project_paths['ROBUPY'] = os.getcwd()

    conf.load('compiler_fc')


def build(bld):

    is_test = bld.options.is_test

    # Start from a clean slate
    cleanup_robupy_package(True)

    # Initialize directory structure
    bld.recurse("fortran")

    if is_test:
        bld.add_post_fun(post)


def distclean(bld):
    cleanup_robupy_package()


def post(bld):
    """ Run test battery after compilation.
    """
    os.chdir(bld.env.project_paths['ROBUPY'] + '/tests')

    pytest.main([])
