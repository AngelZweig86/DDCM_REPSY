#!/usr/bin/env python

# standard library
import sys
import os

top = '.'
out = '.bld'

# Check for Python 3
if not (sys.version_info[0] == 3):
    raise AssertionError('Please use Python 3')

# Reconstruct directory structure and edits to PYTHONPATH
#BASE_DIR = os.path.dirname(os.path.realpath(__file__))
#ROBUPY_DIR = BASE_DIR.replace('robupy', '')
# TODO: THis has to go
sys.path.insert(0, os.environ["ROBUPY"])

from auxiliary import cleanup_robupy_package


def options(opt):

    opt.load('compiler_c')

    opt.load('compiler_fc')

    opt.add_option('--fortran', action='store_true', dest='is_fortran',
                   default=False, help='build FORTRAN implementations')

    opt.add_option('--test', action='store_true', dest='is_test',
                   default=False, help='run test battery')

    opt.add_option('--debug', action='store_true', dest='is_debug',
                   default=False, help='use debug compiler options')


def configure(conf):

    # Distribute options
    is_fortran = conf.options.is_fortran
    is_debug = conf.options.is_debug

    # Check options
    if is_debug:
        assert (is_fortran is True)

    # Construct environment variables
    conf.env.project_paths = dict()

    conf.env.project_paths['ROBUPY'] = os.getcwd()

    if is_fortran:
        conf.load('compiler_fc')


def build(bld):
    # Distribute options
    is_fortran = bld.options.is_fortran

    is_test = bld.options.is_test

    # Start from a clean slate
    cleanup_robupy_package(True)

    if is_fortran:

        bld.recurse('fortran')

    if is_test:

        os.chdir('tests')

        os.system('nosetests tests.py')


def distclean(self):

    cleanup_robupy_package()
