#!/usr/bin/env python
""" This script cleans the directory.
"""

# standard library
import argparse
import shutil
import glob
import os

# Check for Python 3
import sys
if not (sys.version_info[0] == 3):
    raise AssertionError('Please use Python 3')

''' Functions
'''

def distribute_arguments(parser):
    """ Distribute command line arguments.
    """
    # Process command line arguments
    args = parser.parse_args()

    # Extract arguments
    is_all = args.is_all

    # Check arguments
    assert (is_all in [True, False])

    # Finishing
    return is_all


def remove(file_):
    """ Remove directory.
    """
    try:
        os.unlink(file_)
    except IsADirectoryError:
        shutil.rmtree(file_)    


def cleanup(is_all):
    """ Clean directory.
    """

    # Expand list of files to save
    save_files = []
    save_files += ['create', 'clean', 'bin', 'Vagrantfile']

    if not is_all:
        save_files += ['robustToolbox.box']

    # Collect all candidates
    candidates = []
    candidates += glob.glob('*')
    candidates += glob.glob('.*')

    for candidate in candidates:
        if candidate in save_files:
            continue
        remove(candidate)


''' Execution of module as script.
'''
if __name__ == '__main__':

    parser = argparse.ArgumentParser(
        description='Clean directory.',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)

    parser.add_argument('--all', action='store_true', dest='is_all',
        default=False, help='clear all')


    is_all = distribute_arguments(parser)

    # Shutdown and destroy virtual machine
    os.system('vagrant destroy -f')

    # Run function
    cleanup(is_all)
