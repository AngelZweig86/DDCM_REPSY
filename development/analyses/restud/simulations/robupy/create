#!/usr/bin/env python
""" Starting of Monte Carlo specifications.
"""

# standard library
import shutil
import glob
import sys
import os

# module  wide variable
ROBUPY_DIR = os.environ['ROBUPY']
SPEC_DIR = ROBUPY_DIR + '/development/analyses/restud/specifications'

# PYTHONPATH
sys.path.insert(0, ROBUPY_DIR)
sys.path.insert(0, ROBUPY_DIR + '/development/tests/random')

# project library
import robupy

# Import function to that a fast version of the toolbox is available.
from modules.auxiliary import compile_package

# Compile fast version of ROBUPY package
compile_package('--fortran', True)

# Step into directories with alternative solution methods
for method in ['full_solution', 'interpolation']:

    os.chdir(method)

    # Start model solution and simulation
    for dir_ in ['one', 'two', 'three']:

        os.chdir('data_' + dir_)

        # Copy relevant initialization file
        src = SPEC_DIR + '/data_' + dir_ + '.robupy.ini'
        tgt = 'model.robupy.ini'

        shutil.copy(src, tgt)

        # Solve and simulate
        robupy_obj = robupy.read('model.robupy.ini')
        robupy.solve(robupy_obj)

        # Cleanup
        files = glob.glob('logging.*')
        for file_ in files:
            os.unlink(file_)

        os.chdir('..')

    os.chdir('..')